<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mobile.dao.EmployeeMapper" >
  <resultMap id="BaseResultMap" type="com.mobile.pojo.Employee" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="organ_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="job" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="name" jdbcType="CHAR" javaType="java.lang.String" />
      <arg column="sex" jdbcType="CHAR" javaType="java.lang.String" />
      <arg column="phone" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="doc_type" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="doc_number" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="agent_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="loc" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="bank_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="bank_number" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, organ_id, job, name, sex, phone, doc_type, doc_number, agent_name, loc, bank_name, 
    bank_number, user_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from employee
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from employee
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mobile.pojo.Employee" >
    insert into employee (id, organ_id, job, 
      name, sex, phone, doc_type, 
      doc_number, agent_name, loc, 
      bank_name, bank_number, user_id
      )
    values (#{id,jdbcType=INTEGER}, #{organId,jdbcType=INTEGER}, #{job,jdbcType=VARCHAR}, 
      #{name,jdbcType=CHAR}, #{sex,jdbcType=CHAR}, #{phone,jdbcType=VARCHAR}, #{docType,jdbcType=VARCHAR}, 
      #{docNumber,jdbcType=VARCHAR}, #{agentName,jdbcType=VARCHAR}, #{loc,jdbcType=VARCHAR}, 
      #{bankName,jdbcType=VARCHAR}, #{bankNumber,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mobile.pojo.Employee" >
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="organId != null" >
        organ_id,
      </if>
      <if test="job != null" >
        job,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="docType != null" >
        doc_type,
      </if>
      <if test="docNumber != null" >
        doc_number,
      </if>
      <if test="agentName != null" >
        agent_name,
      </if>
      <if test="loc != null" >
        loc,
      </if>
      <if test="bankName != null" >
        bank_name,
      </if>
      <if test="bankNumber != null" >
        bank_number,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="organId != null" >
        #{organId,jdbcType=INTEGER},
      </if>
      <if test="job != null" >
        #{job,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=CHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=CHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="docType != null" >
        #{docType,jdbcType=VARCHAR},
      </if>
      <if test="docNumber != null" >
        #{docNumber,jdbcType=VARCHAR},
      </if>
      <if test="agentName != null" >
        #{agentName,jdbcType=VARCHAR},
      </if>
      <if test="loc != null" >
        #{loc,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null" >
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankNumber != null" >
        #{bankNumber,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mobile.pojo.Employee" >
    update employee
    <set >
      <if test="organId != null" >
        organ_id = #{organId,jdbcType=INTEGER},
      </if>
      <if test="job != null" >
        job = #{job,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=CHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="docType != null" >
        doc_type = #{docType,jdbcType=VARCHAR},
      </if>
      <if test="docNumber != null" >
        doc_number = #{docNumber,jdbcType=VARCHAR},
      </if>
      <if test="agentName != null" >
        agent_name = #{agentName,jdbcType=VARCHAR},
      </if>
      <if test="loc != null" >
        loc = #{loc,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null" >
        bank_name = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankNumber != null" >
        bank_number = #{bankNumber,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mobile.pojo.Employee" >
    update employee
    set organ_id = #{organId,jdbcType=INTEGER},
      job = #{job,jdbcType=VARCHAR},
      name = #{name,jdbcType=CHAR},
      sex = #{sex,jdbcType=CHAR},
      phone = #{phone,jdbcType=VARCHAR},
      doc_type = #{docType,jdbcType=VARCHAR},
      doc_number = #{docNumber,jdbcType=VARCHAR},
      agent_name = #{agentName,jdbcType=VARCHAR},
      loc = #{loc,jdbcType=VARCHAR},
      bank_name = #{bankName,jdbcType=VARCHAR},
      bank_number = #{bankNumber,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>